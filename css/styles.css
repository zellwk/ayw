input,
textarea {
  box-sizing: border-box; }

label {
  box-sizing: border-box; }

/*! HiDPI v2.0.1 | MIT License | git.io/hidpi */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

h1,
h2,
h3,
h4,
h5,
h6,
ul,
li,
p,
blockquote {
  margin: 0;
  padding: 0; }

h1,
h2,
h3,
h4,
h5,
h6 {
  display: block; }

li {
  list-style: none; }

input,
textarea,
button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 0;
  outline: none;
  border: none; }
  input:hover, input:active, input:focus,
  textarea:hover,
  textarea:active,
  textarea:focus,
  button:hover,
  button:active,
  button:focus {
    outline: none;
    border: none; }

embed,
iframe,
img,
object,
video {
  max-width: 100%; }

img {
  height: auto;
  width: auto; }

table {
  table-layout: fixed;
  width: 100%; }

figure {
  max-width: 100%;
  max-width: -webkit-min-content;
  max-width: -moz-min-content;
  max-width: min-content;
  margin: auto; }
  figure > img {
    max-width: inherit; }

p + *,
* + p {
  margin-top: 1em; }

article ul,
article ol {
  margin-left: 0;
  padding-left: 2em; }

article li + li {
  margin-top: 0.5em; }

article ul li {
  list-style-type: disc; }

article ol li {
  list-style-type: decimal; }

section {
  padding-left: 1em;
  padding-right: 1em; }
  @media all and (min-width: 60em) {
    section {
      padding: 0 calc(50% - 400px); } }
  @media all and (min-width: 90.625em) {
    section {
      padding: 0 calc(50% - 20em); } }

section:first-child {
  margin-top: 4.66667rem; }

section:last-child {
  margin-bottom: 4.66667rem; }

html {
  font-family: "jaf-bernino-sans", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 106.25%;
  line-height: 1.45;
  -webkit-font-variant-ligatures: common-ligatures;
          font-variant-ligatures: common-ligatures;
  text-rendering: optimizeLegibility;
  color: #444; }
  @media all and (min-width: 42.5em) {
    html {
      font-size: 125%;
      line-height: 1.4; } }
  @media all and (min-width: 56.25em) {
    html {
      font-size: 137.5%; } }
  @media all and (min-width: 90.625em) {
    html {
      font-size: 143.75%; } }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "jaf-bernino-sans-condensed", sans-serif;
  font-weight: 600;
  color: #222; }

h1 {
  font-size: 1.77778rem;
  line-height: 1.25;
  margin-bottom: 1.55556rem; }
  @media all and (min-width: 42.5em) {
    h1 {
      font-size: 2.37037rem;
      line-height: 1.25; } }

h2 {
  font-size: 1.77778rem;
  line-height: 1.3;
  margin-top: 3.11111rem;
  margin-bottom: 0.77778rem; }

h3 {
  font-size: 1.77778rem;
  line-height: 1.1; }

h4 {
  font-size: 1.33333rem;
  line-height: 1.1; }

h5 {
  font-size: 1.33333rem;
  line-height: 1.1; }

h6 {
  font-size: 0.875rem;
  line-height: 1.4; }

blockquote {
  font-size: 1rem;
  line-height: 1.4;
  font-family: "adelle", serif;
  font-style: italic;
  color: #666;
  max-width: 30em; }
  @media all and (min-width: 42.5em) {
    blockquote {
      font-size: 0.90625rem; } }

cite {
  margin-top: 1em;
  display: block; }

p {
  font-weight: 400;
  max-width: 30em; }

strong {
  font-weight: bold; }

em {
  font-style: italic; }

pre {
  white-space: pre;
  -moz-tab-size: 2;
       tab-size: 2; }

a {
  color: #ed5858; }
  a:hover, a:active, a:focus {
    color: #5e5d23; }

.intro p {
  max-width: 100%; }

@media all and (max-width: 42.4375em) {
  .Book-img {
    width: 300px; } }

.quote {
  border-left: 0.25rem solid #ed5858;
  margin: 1.55556rem 0;
  padding: 1em 1.55556rem; }
  .quote img {
    display: none; }
  .quote cite {
    font-size: 0.8em;
    font-weight: bold; }

.u-center {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.Author {
  font-size: 1rem;
  line-height: 1.4;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media all and (min-width: 42.5em) {
    .Author {
      font-size: 0.90625rem; } }
  @media all and (min-width: 42.5em) {
    .Author {
      -webkit-flex-wrap: nowrap;
          -ms-flex-wrap: nowrap;
              flex-wrap: nowrap; } }
  .Author img {
    -webkit-order: -1;
        -ms-flex-order: -1;
            order: -1;
    border-radius: 100%;
    width: 150px;
    height: 150px;
    margin-left: 2em;
    margin-top: 0.38889rem;
    margin-bottom: 1.55556rem; }
    @media all and (min-width: 42.5em) {
      .Author img {
        -webkit-order: 1;
            -ms-flex-order: 1;
                order: 1;
        width: 200px;
        height: 200px;
        margin-top: 0;
        margin-bottom: 0; } }

.Cards {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media all and (min-width: 42.5em) {
    .Cards {
      margin-left: -10px;
      margin-right: -10px; } }

.Card {
  overflow: hidden;
  position: relative;
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  margin-bottom: 1.55556rem; }
  @media all and (min-width: 42.5em) {
    .Card {
      font-size: 0.875rem;
      line-height: 1.4;
      -webkit-flex: 1 0 calc(50% - 20px);
          -ms-flex: 1 0 calc(50% - 20px);
              flex: 1 0 calc(50% - 20px);
      margin: 10px;
      border: 3px solid #ed5858;
      border-top: 0.77778rem solid #ed5858;
      padding: 1.16667rem 1.16667rem; } }
  .Card p {
    max-width: 100%; }

.Card__title {
  font-family: "jaf-bernino-sans-condensed", sans-serif;
  font-weight: bold;
  margin-bottom: 0.38889rem; }

@media all and (min-width: 42.5em) {
  .Card__desc,
  .Card__chapters {
    font-size: 0.9em; } }

.Card__chapters {
  display: none;
  margin-top: 1em; }
  .Card.is-show .Card__chapters {
    display: block; }

.Packages {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media all and (min-width: 42.5em) {
    .Packages {
      -webkit-flex-wrap: nowrap;
          -ms-flex-wrap: nowrap;
              flex-wrap: nowrap;
      margin-left: -10px;
      margin-right: -10px; } }
  @media all and (min-width: 68.75em) {
    .Packages {
      margin-left: -4.66667rem;
      margin-right: -4.66667rem; } }

.Package, .Package--em {
  -webkit-flex: 1 0 100%;
      -ms-flex: 1 0 100%;
          flex: 1 0 100%;
  padding: 1.55556rem;
  margin: 0.77778rem 0;
  border: 3px solid #ccc;
  counter-reset: package; }
  @media all and (min-width: 42.5em) {
    .Package, .Package--em {
      -webkit-flex: 1 0 calc(41.66667% - 10px);
          -ms-flex: 1 0 calc(41.66667% - 10px);
              flex: 1 0 calc(41.66667% - 10px);
      margin: 10px;
      font-size: 0.8rem; } }
  .Package .Package__title, .Package--em .Package__title {
    height: 1.55556rem;
    line-height: 1;
    margin-bottom: 1.55556rem; }
  .Package .btn, .Package--em .btn, .Package .btn--ghost, .Package--em .btn--ghost {
    text-transform: uppercase;
    letter-spacing: 0.02em;
    font-family: "jaf-bernino-sans", sans-serif; }
  .Package ol, .Package--em ol {
    padding-left: 1em; }
  .Package li, .Package--em li {
    counter-increment: package;
    list-style: none;
    margin: 0.25em 0; }
    .Package li:before, .Package--em li:before {
      content: counter(package) ". "; }

.Package--em {
  -webkit-flex: 1 0 calc(58.33333% - 20px);
      -ms-flex: 1 0 calc(58.33333% - 20px);
          flex: 1 0 calc(58.33333% - 20px);
  border: 0.38889rem solid #ed5858; }
  .Package--em .Package__title {
    color: #ed5858;
    font-weight: bold; }

.Package__cta {
  margin-top: 1em; }

.FAQ dt {
  font-weight: bold;
  margin-top: 1em; }

.FAQ dd {
  margin-left: 0;
  padding-left: 0; }

.btn, .btn--ghost {
  font-family: "jaf-bernino-sans-condensed", sans-serif;
  display: inline-block;
  text-decoration: none;
  padding: 0.5em 0.75em;
  border: 2px solid #ed5858;
  border-radius: 3px;
  transition: 0.15s all ease-out;
  background: #ebe856;
  color: #5e5d23;
  font-weight: 700;
  background: #ed5858;
  color: white; }
  .btn:hover, .btn--ghost:hover, .btn:active, .btn--ghost:active, .btn:focus, .btn--ghost:focus {
    border: 2px solid #ebe856;
    transition: none;
    background: #ebe856;
    color: #5e5d23; }

.btn--ghost {
  font-weight: normal;
  background: transparent;
  border-color: #ed5858;
  color: #ed5858; }
  .btn--ghost:hover, .btn--ghost:active, .btn--ghost:focus {
    background-color: #ed5858;
    border-color: #ed5858;
    color: white; }

.btn.is-disabled, .is-disabled.btn--ghost {
  border-color: #ddd;
  color: #ddd;
  background: transparent; }
  .btn.is-disabled:hover, .is-disabled.btn--ghost:hover, .btn.is-disabled:active, .is-disabled.btn--ghost:active, .btn.is-disabled:focus, .is-disabled.btn--ghost:focus {
    cursor: default;
    border-color: #ddd;
    color: #ddd;
    background: transparent; }

.ck_form {
  margin-top: 1em; }
  .ck_form .ck_control_group {
    display: inline-block;
    margin-right: 0.5em; }
  .ck_form input {
    background-color: white;
    height: calc(2.5em + 2px);
    padding: 1em;
    font-size: 1em;
    border: 1px solid #cccccc;
    border-radius: 3px;
    transition: all 0.2s ease-out;
    box-shadow: none;
    resize: none;
    outline: none; }
    .ck_form input:hover {
      border: 1px solid #cccccc; }
    .ck_form input:focus, .ck_form input:active {
      border: 1px solid #ed5858; }
      .ck_form input:focus + label:before, .ck_form input:active + label:before {
        color: #ed5858; }
    .ck_form input + label {
      display: block;
      font-size: 1em;
      height: 2.5em;
      line-height: 2.5em;
      margin-top: calc(-2.5em - 1px);
      margin-bottom: 1em;
      cursor: text; }
      .ck_form input + label:before {
        content: attr(placeholder);
        display: inline-block;
        color: #999999;
        margin: 0 calc(1em + 2px);
        white-space: nowrap;
        transition-property: -webkit-transform, color;
        transition-property: transform, color;
        transition-duration: 0.2s;
        transition-delay: 0;
        transition-timing-function: ease-out;
        -webkit-transform-origin: left center;
        transform-origin: left center; }
    .ck_form input:focus + label:before, .ck_form input.active + label:before, .ck_form input:valid + label:before {
      background: white;
      line-height: 1;
      padding: 0 1.5px;
      -webkit-transform: translateY(-1.25em) translateY(-0.5px) scale(0.8, 0.8);
      transform: translateY(-1.25em) translateY(-0.5px) scale(0.8, 0.8); }
    .ck_form input:valid {
      border: 1px solid #23a045; }
      .ck_form input:valid + label:before {
        content: attr(alt);
        color: #23a045; }
  .ck_form .subscribe_button {
    margin-top: 0.77778rem;
    border-radius: 40px;
    text-transform: none; }

/*# sourceMappingURL=data:application/json;base64, */
